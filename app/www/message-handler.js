// Generated by CoffeeScript 1.12.5
(function() {
  var applied, cached_selector;

  window.selector_cache = {};

  cached_selector = function(selector) {
    var elem;
    if (_.has(window.selector_cache, selector)) {
      return window.selector_cache[selector];
    } else {
      elem = $(selector);
      if (elem.length) {
        window.selector_cache[selector] = elem;
      }
      return elem;
    }
  };

  applied = function(f) {
    return function(args) {
      return f.apply(null, args);
    };
  };

  Shiny.addCustomMessageHandler('getMapLayers', function(message) {
    console.log('getMapLayers');
    window.mapLayers = {};
    return $('#map').data("leaflet-map").eachLayer(function(layer) {
      if (layer instanceof L.CircleMarker) {
        return window.mapLayers[layer.options.layerId] = layer;
      }
    });
  });

  Shiny.addCustomMessageHandler('updateMap', function(message) {
    var scale;
    console.log('updateMap');
    console.log(message);
    _.zip(message.units.unit_id, message.units.entity_id, message.units.selected, message.units.locked).forEach(applied(function(unit_id, entity_id, selected, locked) {
      var unit;
      unit = cached_selector('.unit-' + unit_id);
      return unit.removeClass(function(index, className) {
        return (className.match(/(^|\s)unit-assigned-to-entity-\S+/g) || []).join(' ');
      }).addClass('unit-assigned-to-entity-' + entity_id).toggleClass('selected', selected).toggleClass('locked', locked).toggleClass('unlocked', !locked).toggleClass('other-entity-selected', message.selected_entity !== '__NONE_SELECTED__' && entity_id !== message.selected_entity);
    }));
    scale = d3.scaleLinear().domain(d3.extent(message.entities.utilization.map(function(x) {
      return Math.abs(1 - x);
    }))).range([5, 8]);
    return _.zip(message.entities.entity_id, message.entities.utilization).forEach(applied(function(entity_id, utilization) {
      var entity;
      entity = cached_selector('.entity-' + entity_id);
      entity.toggleClass('deselected', message.selected_entity !== '__NONE_SELECTED__' && entity_id !== message.selected_entity);
      cached_selector('.entity-meta.entity-' + entity_id).toggleClass('over-capacity', utilization > 1).toggleClass('under-capacity', utilization < 1);
      return window.mapLayers['entity_meta_' + entity_id].setRadius(scale(utilization));
    }));
  });

}).call(this);
